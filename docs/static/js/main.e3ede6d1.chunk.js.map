{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","nome","ruolo","email","telefono","telefonoSenzaSpazi","copy","window","getSelection","selectAllChildren","document","querySelector","execCommand","removeAllRanges","alert","step1","react_default","a","createElement","className","htmlFor","id","type","value","_this","onChange","handleNomeChange","handleRuoloChange","handleEmailChange","reactTextMask_default","mask","handleTelefonoChange","step2","dangerouslySetInnerHTML","getFirma","e","target","nomeArray","split","newState","length","toLowerCase","setState","join","__html","concat","this","onClick","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3ede6d1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport MaskedInput from 'react-text-mask';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    nome: 'Tommaso Valente',\n    ruolo: 'Co-Founder & Client Director',\n    email: 'tommaso',\n    telefono: '347 74 62 355',\n    telefonoSenzaSpazi: '3477462335'\n  };\n\n  copy = () => {\n    window.getSelection().selectAllChildren(document.querySelector('.Output'));\n    document.execCommand('copy');\n    window.getSelection().removeAllRanges();\n    alert('Copiato! Ora vai su Gmail');\n  };\n\n  step1 = () => (\n    <div className=\"Step Step--1\">\n      <div>\n        <label htmlFor=\"nome\">Nome </label>\n        <input\n          id=\"nome\"\n          type=\"text\"\n          value={this.state.nome}\n          onChange={this.handleNomeChange}\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"ruolo\">Ruolo </label>\n        <input\n          id=\"ruolo\"\n          type=\"text\"\n          value={this.state.ruolo}\n          onChange={this.handleRuoloChange}\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"email\">Email </label>\n        <input\n          id=\"email\"\n          type=\"text\"\n          value={this.state.email}\n          onChange={this.handleEmailChange}\n        />\n        @mirrorprod.com\n      </div>\n\n      <div>\n        <label htmlFor=\"telefono\">Telefono </label>\n\n        <MaskedInput\n          mask={[\n            /\\d/,\n            /\\d/,\n            /\\d/,\n            ' ',\n            /\\d/,\n            /\\d/,\n            ' ',\n            /\\d/,\n            /\\d/,\n            ' ',\n            /\\d/,\n            /\\d/,\n            /\\d/\n          ]}\n          onChange={this.handleTelefonoChange}\n          id=\"telefono\"\n          value={this.state.telefono}\n        />\n      </div>\n    </div>\n  );\n\n  step2 = () => (\n    <div className=\"Step Step--2\">\n      <div className=\"Output\" dangerouslySetInnerHTML={this.getFirma()} />\n    </div>\n  );\n\n  handleNomeChange = e => {\n    const nome = e.target.value;\n    const nomeArray = nome.split(' ');\n\n    const newState = { nome };\n\n    if (nomeArray.length > 1) {\n      newState.email = nomeArray[0].toLowerCase();\n    }\n\n    this.setState(newState);\n  };\n\n  handleRuoloChange = e => {\n    this.setState({ ruolo: e.target.value });\n  };\n\n  handleEmailChange = e => {\n    this.setState({ email: e.target.value });\n  };\n\n  handleTelefonoChange = e => {\n    this.setState({\n      telefono: e.target.value,\n      telefonoSenzaSpazi: e.target.value.split(' ').join('')\n    });\n  };\n\n  getFirma = () => ({\n    __html: `<body> <br /> -- <br /><br /> <div class=\"container\" style=\" position:relative; width:285px; height:auto;\" > <link href=\"https://fonts.googleapis.com/css?family=Montserrat:300,400,600,700\" rel=\"stylesheet\" /> <div class=\"logo\" style=\" float:left; cursor:pointer; height:115px; width:70px;\" > <a href=\"http://mirrorprod.com\"> <img src=\"http://materiale.mirrorprod.com/email/immagini/logo.png\" alt=\"logo\" height=\"55px\" width=\"58px\" /> </a> </div> <div class=\"text\" style=\"height: auto; width: 100; position:absolute; left:70px; width: auto; \" > <div style=\"font-family: 'Montserrat', sans-serif; font-weight:700; line-height:15px; color:#231f20; font-size:16px;\"> ${\n      this.state.nome\n    } </div> <div class=\"italic\" style=\"font-family: 'Montserrat', sans-serif; font-weight:400; line-height:15px; color:#231f20; font-size:12px; margin-bottom: 9px;\" > ${\n      this.state.ruolo\n    } </div> <div style=\"font-family: 'Montserrat', sans-serif; ; font-weight:700; line-height:14px; color:#231f20; font-size:10px;\" > M: <a href=\"tel:+39${\n      this.state.telefonoSenzaSpazi\n    }\" target=\"_blank\" style=\"text-decoration:none; line-height:14px; color:#231f20; font-size:10px; font-weight:400;\" > +39 ${\n      this.state.telefono\n    } </a> </div> <div style=\"font-family: 'Montserrat', sans-serif; ; font-weight:700; line-height:14px; color:#231f20; font-size:10px;\" > O: <a href=\"tel:+390559753445\" target=\"_blank\" style=\"text-decoration:none; line-height:14px; color:#231f20; font-size:10px; font-weight:400;\" > +39 055 97 53 445 </a> <div style=\"font-family: 'Montserrat', sans-serif;\"> <a href=\"mailto:${\n      this.state.email\n    }@mirrorprod.com\" target=\"_blank\" style=\"text-decoration:none; line-height:14px; color:#231f20; font-size:10px;\" > ${\n      this.state.email\n    }@mirrorprod.com </a> </div> <div style=\"font-family: 'Montserrat', sans-serif;\"> <a href=\"http://www.mirrorprod.com\" target=\"_blank\" style=\"text-decoration:none; line-height:14px; color:#c30081; font-size:10px;\" > www.mirrorprod.com </a> </div> <div class=\"logo-social-1\" style=\"margin-top:2px;\"> <a href=\"https://www.instagram.com/mirrorprod\" target=\"_blank\" title=\"Mirror Prod. Instagram page\" style=\"text-decoration:none;\" > <img src=\"http://materiale.mirrorprod.com/email/immagini/icons/instagram-icon.png\" alt=\"instagram icon\" height=\"17px\" width=\"17px\" style=\"margin-top:0px;padding-right:12px;\" /> </a> <a href=\"https://www.facebook.com/mirrorprod\" target=\"_blank\" title=\"Mirror Prod. Facebook page\" target=\"_blank\" style=\"text-decoration:none;\" > <img src=\"http://materiale.mirrorprod.com/email/immagini/icons/fb-icon.png\" alt=\"fb-icon\" height=\"17px\" width=\"17px\" style=\"margin-top:0px;padding-right:12px;\" /> </a> <a href=\"https://www.vimeo.com/mirrorprod\" target=\"_blank\" title=\"Mirror Prod. Vimeo page\" style=\"text-decoration:none; margin-top:0px;\" > <img src=\"http://materiale.mirrorprod.com/email/immagini/icons/vimeo-icon.png\" alt=\"vimeo-icon\" height=\"17px\" width=\"17px\" style=\"margin-top:0px;padding-right:12px;\" /> </a> <a href=\"https://www.linkedin.com/company/mirror-production/\" target=\"_blank\" title=\"Mirror Prod. Linkedin Page\" style=\"text-decoration:none; margin-top:0px;\" > <img src=\"http://materiale.mirrorprod.com/email/immagini/icons/linkedin-icon.png\" alt=\"linkedin-icon\" height=\"17px\" width=\"17px\" style=\"margin-top:0px;padding-right:0px;\" /> </a> </div> </div> </div> </div> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> </body>`\n  });\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Istruzioni\">\n          <ol>\n            <li>Metti i tuoi dati nel form a sinistra</li>\n            <li>Controlla nell'anteprima a destra che tutto sia a posto</li>\n            <li>\n              Clicca il bottone COPIA in fondo alla pagina. Questo copier√† il\n              contenuto della nuova firma negli appunti\n            </li>\n            <li>Vai su Gmail usando un browser qualsiasi a parte Chrome</li>\n            <li>Vai nelle impostazioni di Gmail e cerca la sezione \"Firma\"</li>\n            <li>\n              Svuota il contenuto della firma e fai CTRL + V (o CMD + V su Mac)\n            </li>\n            <li>Salva le impostazioni</li>\n          </ol>\n        </div>\n\n        <div className=\"StepGrid\">\n          {this.step1()}\n          {this.step2()}\n        </div>\n\n        <div className=\"ButtonContainer\">\n          <button onClick={this.copy}>Copia</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}